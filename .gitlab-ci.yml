stages:
  - build
  - test
  - deploy

include:
  - remote: https://gitlab.com/yobasystems/gitlab-ci-templates/raw/master/container_scanning_all_arch.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml


.build_template: &build_definition
  image: yobasystems/alpine-docker:dind
  stage: build
  variables:
  script:
    - echo "Build Timestamp ${CI_COMMIT_TIMESTAMP} - ${CI_COMMIT_SHORT_SHA}"
    - echo "Building for ARCH=${ARCH}, PLATFORM=${PLATFORM}"
    - apk add --update git
    - cd alpine-mariadb-${ARCH}/
    - docker build
      --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
      --build-arg BUILD_DATE=${CI_COMMIT_TIMESTAMP}
      -t ${CI_REGISTRY_IMAGE}/${CI_COMMIT_SHORT_SHA}:${ARCH}
      --platform linux/${PLATFORM}
      .

amd64 mariadb build:
  <<: *build_definition
  tags:
    - amd64
  variables:
    ARCH: amd64
    PLATFORM: amd64

arm32v7 mariadb build:
  <<: *build_definition
  tags:
    - armhf
  variables:
    ARCH: armhf
    PLATFORM: arm/v7

arm64v8 mariadb build:
  <<: *build_definition
  tags:
    - aarch64
  variables:
    ARCH: aarch64
    PLATFORM: arm64/v8

sast:
  stage: test

.deploy_template: &deploy_definition
  image: yobasystems/alpine-docker:dind
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$CI_REGISTRY" --password-stdin
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    - docker pull ${CI_REGISTRY_IMAGE}/${CI_COMMIT_SHORT_SHA}:${ARCH}
    - docker tag ${CI_REGISTRY_IMAGE}/${CI_COMMIT_SHORT_SHA}:${ARCH} $CI_REGISTRY_IMAGE:${ARCH}
    - docker tag ${CI_REGISTRY_IMAGE}/${CI_COMMIT_SHORT_SHA}:${ARCH} $DOCKER_REGISTRY_DOCKERHUB_REPO:${ARCH}
    - docker tag ${CI_REGISTRY_IMAGE}/${CI_COMMIT_SHORT_SHA}:${ARCH} $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:${ARCH}
    - docker push $CI_REGISTRY_IMAGE:${ARCH}
    - docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:${ARCH}
    - docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:${ARCH}
    - |
      if [[ "$CI_COMMIT_TAG" ]]; then
        docker tag ${CI_REGISTRY_IMAGE}/${CI_COMMIT_SHORT_SHA}:${ARCH} $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG}-${ARCH}
        docker tag ${CI_REGISTRY_IMAGE}/${CI_COMMIT_SHORT_SHA}:${ARCH} $DOCKER_REGISTRY_DOCKERHUB_REPO:${CI_COMMIT_TAG}-${ARCH}
        docker tag ${CI_REGISTRY_IMAGE}/${CI_COMMIT_SHORT_SHA}:${ARCH} $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:${CI_COMMIT_TAG}-${ARCH}
        docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG}-${ARCH}
        docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:${CI_COMMIT_TAG}-${ARCH}
        docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:${CI_COMMIT_TAG}-${ARCH}
      fi

amd64 mariadb deploy:
  <<: *deploy_definition
  tags:
    - amd64
  variables:
    ARCH: amd64
    PLATFORM: amd64
  needs:
    - amd64 mariadb build

arm32v7 mariadb deploy:
  <<: *deploy_definition
  tags:
    - armhf
  variables:
    ARCH: armhf
    PLATFORM: arm/v7
  needs:
    - arm32v7 mariadb build

arm64v8 mariadb deploy:
  <<: *deploy_definition
  tags:
    - aarch64
  variables:
    ARCH: aarch64
    PLATFORM: arm64/v8
  needs:
    - arm64v8 mariadb build

manifest creation:
  image: yobasystems/alpine-docker:dind
  stage: deploy
  needs:
    - amd64 mariadb deploy
    - arm32v7 mariadb deploy
    - arm64v8 mariadb deploy
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - mkdir -p ~/.docker
    - echo '{"experimental":"enabled"}' > ~/.docker/config.json
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$CI_REGISTRY" --password-stdin
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    - |
      create_and_push_manifest() {
        local repo=$1
        local tag=$2
        docker manifest create $repo:$tag \
          $repo:${tag}-amd64 \
          $repo:${tag}-armhf \
          $repo:${tag}-aarch64
        docker manifest annotate $repo:$tag $repo:${tag}-amd64 --os linux --arch amd64
        docker manifest annotate $repo:$tag $repo:${tag}-armhf --os linux --arch arm --variant v7
        docker manifest annotate $repo:$tag $repo:${tag}-aarch64 --os linux --arch arm64 --variant v8
        docker manifest push $repo:$tag
      }
    - |
      if [[ "$CI_COMMIT_TAG" ]]; then
        create_and_push_manifest $CI_REGISTRY_IMAGE $CI_COMMIT_TAG
        create_and_push_manifest $DOCKER_REGISTRY_DOCKERHUB_REPO $CI_COMMIT_TAG
        create_and_push_manifest $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO $CI_COMMIT_TAG
      fi
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        create_and_push_manifest $CI_REGISTRY_IMAGE latest
        create_and_push_manifest $DOCKER_REGISTRY_DOCKERHUB_REPO latest
        create_and_push_manifest $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO latest
      fi
